{"version":3,"file":"app.js","mappings":"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","sources":["webpack://HexGuessr/./src/hexguessr.js","webpack://HexGuessr/./src/index.js"],"sourcesContent":["const hexIntegers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\r\n\r\nexport default class HexGuessr {\r\n\r\n    _hexValues = []\r\n\r\n    constructor() {\r\n        this._hexToGuess = this._generate();\r\n        this._hexValues.push(this._hexToGuess);\r\n        for (let i = 0; i < 4; i++) {\r\n            this._hexValues.push(this._generate());\r\n        }\r\n        this._shuffle(this._hexValues);\r\n    }\r\n\r\n    /**\r\n     * @returns {String}\r\n     */\r\n    get hexToGuess() { \r\n        return this._hexToGuess;\r\n    }\r\n\r\n    /**\r\n     * @returns {Array}\r\n     */\r\n    get hexValues() {\r\n        return this._hexValues;\r\n    }\r\n\r\n    /**\r\n     * Generates and returns a hexadecimal value that represents a color \r\n     * @returns {String}\r\n     */\r\n    _generate() {\r\n        let hexCode = '#';\r\n        for (let i = 0; i < 6; i++) {\r\n            hexCode += hexIntegers[Math.floor(Math.random() * hexIntegers.length)];\r\n        }\r\n        return hexCode;\r\n    }\r\n\r\n    /**\r\n     * Randomly shuffle an array based on the Fisher-Yates shuffle algorithm\r\n     * @param {Array} array\r\n     */\r\n    _shuffle(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n          let j = Math.floor(Math.random() * (i + 1));\r\n          [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert a decimal value to hexadecimal\r\n     * @param {String} value\r\n     * @returns {String}\r\n     */\r\n    static decToHex(value) {\r\n        if (value > 255) {\r\n            return 'FF';\r\n        } else if (value < 0) {\r\n            return '00';\r\n        } else {\r\n            return value.toString(16).padStart(2, '0').toUpperCase();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert a RGB value to hexadecimal\r\n     * @param {String} value\r\n     * @returns {String}\r\n     */\r\n    static rgbToHex(value) {\r\n        const rgbValue = value.substring(4, (value.length-1)).split(', ');\r\n        return '#' + rgbValue.map((x) => HexGuessr.decToHex(~~x)).join('');\r\n    }\r\n\r\n}","// ----\r\n// SASS\r\n// ----\r\nimport './styles.scss';\r\n\r\n\r\n\r\n// ---------\r\n// HexGuessr\r\n// ---------\r\nimport HexGuessr from './hexguessr';\r\nlet hexGuessr = new HexGuessr();\r\nconst hexToGuess = document.querySelector('#hexToGuess');\r\nconst hexChoice = document.querySelector('#hexChoice');\r\nconst domResult = document.querySelector('#hexResult');\r\n\r\n/**\r\n * Render the HexGuessr game in the DOM\r\n */\r\nconst renderHexGuessr = function() {\r\n    hexToGuess.innerText = hexGuessr.hexToGuess;\r\n    if (hexToGuess.classList.contains('hidden')) {\r\n        hexToGuess.classList.remove('hidden');\r\n        hexChoice.classList.remove('hidden');\r\n    }\r\n    renderColorsList(hexGuessr.hexValues);\r\n}\r\n\r\n/**\r\n * Apply randomly generated colors to the list\r\n * @param {Array} colors\r\n */\r\nconst renderColorsList = function(colors) {\r\n    const hexColors = [...document.querySelector('#hexChoice').children];\r\n    for (let i = 0; i < hexColors.length; i++) {\r\n        if (hexColors[i].classList.contains('hidden')) {\r\n            hexColors[i].classList.remove('hidden');\r\n        }\r\n        hexColors[i].style.backgroundColor = colors[i];\r\n        hexColors[i].style.color = colors[i];\r\n        hexColors[i].addEventListener('click', displayResult);\r\n        hexColors[i].addEventListener('animationend', () => {\r\n            hexColors[i].classList.remove('hexguessr-wrong-answer');\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * Display the result\r\n * @param {PointerEvent} event\r\n */\r\nconst displayResult = function(event) {\r\n    const colorSelected = HexGuessr.rgbToHex(event.target.style.backgroundColor);\r\n    if (colorSelected === hexGuessr.hexToGuess) {\r\n        event.target.classList.add('hexguessr-good-answer');\r\n        domResult.classList.add('hidden');\r\n        const colorsList = [].slice.call(event.target.parentNode.children);\r\n        colorsList.forEach(element => {\r\n            element.removeEventListener('click', displayResult);\r\n            if (element !== event.target) {\r\n                element.classList.add('hidden');\r\n            }\r\n        });\r\n        setTimeout(() => {\r\n            displayButton();\r\n            domResult.innerHTML = 'Well played !';\r\n            domResult.classList.remove('hidden');\r\n        }, 300);\r\n    } else {\r\n        event.target.classList.add('hexguessr-wrong-answer');\r\n        if (!domResult.contains(document.querySelector('.hexguessr-color-selected'))) {\r\n            domResult.classList.add('hidden');\r\n            setTimeout(() => {\r\n                const spanHexSelected = document.createElement('span');\r\n                spanHexSelected.appendChild(document.createTextNode(colorSelected));\r\n                spanHexSelected.classList.add('hexguessr-color-selected');\r\n                spanHexSelected.style.color = colorSelected;\r\n                domResult.innerHTML = 'Try again. That color was ' + spanHexSelected.outerHTML;\r\n                domResult.classList.remove('hidden');\r\n            }, 300);\r\n        } else {\r\n            const spanColorSelected = document.querySelector('.hexguessr-color-selected');\r\n            if (spanColorSelected.innerText === colorSelected) {\r\n                return;\r\n            }\r\n            spanColorSelected.classList.add('hidden');\r\n            setTimeout(() => {\r\n                spanColorSelected.innerHTML = colorSelected;\r\n                spanColorSelected.style.color = colorSelected;\r\n                spanColorSelected.classList.remove('hidden');\r\n            }, 300);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Display button for new game\r\n */\r\nconst displayButton = function() {\r\n    const buttonNewGame = document.createElement('button');\r\n    buttonNewGame.classList.add('hexguessr-newgame');\r\n    buttonNewGame.classList.add('hidden');\r\n    buttonNewGame.addEventListener('click', () => { newGame() });\r\n    buttonNewGame.innerText = 'New Game';\r\n    document.querySelector('.hexguessr-container').append(buttonNewGame);\r\n    buttonNewGame.classList.remove('hidden');\r\n}\r\n\r\n/**\r\n * Description\r\n */\r\nconst newGame = function() {\r\n    domResult.classList.add('hidden');\r\n    const prevGoodColor = document.querySelector('.hexguessr-good-answer');\r\n    prevGoodColor.classList.remove('hexguessr-good-answer');\r\n    hexGuessr = new HexGuessr();\r\n    const list = document.querySelector('.hexguessr-list');\r\n    list.classList.add('hidden');\r\n    hexToGuess.classList.add('hidden');\r\n    const buttonNewGame = document.querySelector('.hexguessr-newgame');\r\n    buttonNewGame.classList.add('hidden');\r\n    setTimeout(() => {\r\n        buttonNewGame.remove();\r\n        renderHexGuessr();\r\n        domResult.innerText = 'Choose a Color';\r\n        domResult.classList.remove('hidden');\r\n    }, 400);\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function(){\r\n    renderHexGuessr()\r\n});"],"names":["hexIntegers","HexGuessr","this","_hexToGuess","_generate","_hexValues","push","i","_shuffle","value","toString","padStart","toUpperCase","substring","length","split","map","x","decToHex","join","hexCode","Math","floor","random","array","j","hexGuessr","hexToGuess","document","querySelector","hexChoice","domResult","renderHexGuessr","innerText","classList","contains","remove","renderColorsList","hexValues","colors","hexColors","children","style","backgroundColor","color","addEventListener","displayResult","event","colorSelected","rgbToHex","target","add","slice","call","parentNode","forEach","element","removeEventListener","setTimeout","displayButton","innerHTML","spanColorSelected","spanHexSelected","createElement","appendChild","createTextNode","outerHTML","buttonNewGame","newGame","append"],"sourceRoot":""}